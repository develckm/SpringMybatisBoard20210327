<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.acorn.springboardteacher.mapper.UserMapper">
    <resultMap id="UserMap" type="com.acorn.springboardteacher.dto.UserDto">
        <id column="u_id" property="uId"/>
        <result column="name" property="name"/>
        <result column="pw" property="pw"/>
        <result column="phone" property="phone"/>
        <result column="img_path" property="imgPath"/>
        <result column="email" property="email"/>
        <result column="post_time" property="postTime"/>
        <result column="birth" property="birth"/>
        <result column="gender" property="gender"/>
        <result column="address" property="address"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="permission" property="permission"/>
        <result column="status" property="status"/>
        <result column="email_check_code" property="emailCheckCode"/>
        <association
                property="following"
                select="com.acorn.springboardteacher.mapper.FollowMapper.findByToIdAndFromIdIsLoginUserId"
                column="u_id"
                fetchType="eager"/>
        <collection
                property="followings"
                select="com.acorn.springboardteacher.mapper.FollowMapper.findByFromId"
                column="u_id"
                fetchType="lazy"/>
        <collection
                property="followers"
                select="com.acorn.springboardteacher.mapper.FollowMapper.findByToId"
                column="u_id"
                fetchType="eager"/>
    </resultMap>
    <update id="setLoginUserId">
        SET @loginUserId=#{uId}
    </update>
    <update id="setLoginUserIdNull">
        SET @loginUserId=NULL;
    </update>
    <insert id="insertOne" parameterType="UserDto">
        INSERT INTO users (u_id, pw, name, phone, img_path, email, birth, gender, address, detail_address,status,email_check_code)
        VALUE (#{uId},#{pw},#{name},#{phone},#{imgPath},#{email},#{birth},#{gender},#{address},#{detailAddress},#{status},#{emailCheckCode})
    </insert>
    <update id="updateOne" parameterType="UserDto">
        UPDATE users SET
            pw=#{pw},
            name=#{name},
            phone=#{phone},
            img_path=#{imgPath},
            email=#{email},
            birth=#{birth},
            gender=#{gender},
            address=#{address},
            detail_address=#{detailAddress}
            WHERE u_id=#{uId}
    </update>
    <update id="updatePwByUId" parameterType="UserDto">
        UPDATE users SET pw=#{pw} WHERE u_id=#{uId};
    </update>
    <update id="updateStatusByUidAndEmailCheckCode">
        UPDATE users SET status=#{status} WHERE u_id=#{uId} AND email_check_code=#{emailCheckCode}
    </update>
    <delete id="deleteByUIdAndPw" parameterType="UserDto">
        DELETE FROM users WHERE u_id=#{uId} AND pw=#{pw}
    </delete>
    <select id="findByUId" resultMap="UserMap">
        SELECT * FROM users WHERE u_id=#{uId}
    </select>
    <select id="findByUIdAndPw" resultMap="UserMap">
        SELECT * FROM users WHERE u_id=#{uId} AND pw=#{pw}

    </select>
    <select id="findUIdByEmailAndPhoneAndName" resultType="java.lang.String">
        SELECT u_id FROM users WHERE email=#{email} AND phone=#{phone} AND name=#{name}
    </select>
</mapper>