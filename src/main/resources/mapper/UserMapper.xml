<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.acorn.springboardteacher.mapper.UserMapper">
    <resultMap id="UserMap" type="UserDto">
        <id column="u_id" property="uId"/>
        <result column="name" property="name"/>
        <result column="pw" property="pw"/>
        <result column="phone" property="phone"/>
        <result column="img_path" property="imgPath"/>
        <result column="email" property="email"/>
        <result column="post_time" property="postTime"/>
        <result column="birth" property="birth"/>
        <result column="gender" property="gender"/>
        <result column="address" property="address"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="permission" property="permission"/>
        <result column="f4f" property="f4f"/>
    </resultMap>
    <update id="setLoginUserId">
        SET @loginUserId=#{uId}
    </update>
    <update id="setLoginUserIdNull">
        SET @loginUserId=NULL;
    </update>
    <insert id="insertOne" parameterType="UserDto">
        INSERT INTO users (u_id, pw, name, phone, img_path, email, birth, gender, address, detail_address)
        VALUE (#{uId},#{pw},#{name},#{phone},#{imgPath},#{email},#{birth},#{gender},#{address},#{detailAddress})
    </insert>
    <update id="updateOne" parameterType="UserDto">
        UPDATE users SET
            pw=#{pw},
            name=#{name},
            phone=#{phone},
            img_path=#{imgPath},
            email=#{email},
            birth=#{birth},
            gender=#{gender},
            address=#{address},
            detail_address=#{detailAddress}
            WHERE u_id=#{uId}
    </update>
    <update id="updatePwByUId" parameterType="UserDto">
        UPDATE users SET pw=#{pw} WHERE u_id=#{uId};
    </update>
    <delete id="deleteByUIdAndPw" parameterType="UserDto">
        DELETE FROM users WHERE u_id=#{uId} AND pw=#{pw}
    </delete>
    <select id="findByUId" resultMap="UserMap">
        SELECT * FROM users WHERE u_id=#{uId}
    </select>
    <select id="findByUIdAndPw" resultMap="UserMap">
        SELECT * FROM users WHERE u_id=#{uId} AND pw=#{pw}

    </select>
    <select id="findUIdByEmailAndPhoneAndName" resultType="java.lang.String">
        SELECT u_id FROM users WHERE email=#{email} AND phone=#{phone} AND name=#{name}
    </select>
    <select id="findByFollowFromId" resultMap="UserMap">
        SELECT u.* FROM follows following LEFT JOIN users u on following.to_id=u.u_id WHERE from_id=#{fromId}
    </select>
    <select id="findByFollowToId" resultMap="UserMap">
        SELECT
                u.*,
               (SELECT COUNT(*) FROM follows WHERE from_id=follower.to_id AND to_id=follower.from_id) f4f
            FROM follows follower
                LEFT JOIN users u
                    on follower.from_id=u.u_id
            WHERE to_id=#{toId}
    </select>

    <select  id="findByFollowing_ToIdEqualsFollower_FromIdAndFollowing_FromId" resultMap="UserMap">
        SELECT u.*
            FROM follows following
                inner join follows follower
                    on following.to_id=follower.from_id
                left join users u
                    on following.to_id = u.u_id
                WHERE following.from_id=follower.to_id
                    AND following.from_id= #{fromId};

    </select>
</mapper>